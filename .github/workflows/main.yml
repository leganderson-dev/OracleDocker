name: Run MSSQL Container

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  run-mssql-container:
    runs-on: ubuntu-latest

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: YourStrong@Passw0rd
          MSSQL_PID: Express
        ports:
          - 1433:1433
        options: >-
          --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'YourStrong@Passw0rd' -Q 'SELECT 1' -b"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install sqlcmd
      run: |
        sudo apt-get update
        sudo apt-get install -y curl apt-transport-https gnupg
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
        echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
      env:
        DEBIAN_FRONTEND: noninteractive

    - name: Wait for MSSQL to be ready
      run: |
        until /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'YourStrong@Passw0rd' -Q "SELECT 1" -b; do
          echo "Waiting for MSSQL to be ready..."
          sleep 2
        done

    - name: Verify MSSQL is running
      run: |
        if /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'YourStrong@Passw0rd' -Q "SELECT 1" -b; then
          echo "MSSQL is up and running!"
        else
          echo "MSSQL is not running!" >&2
          exit 1
        fi